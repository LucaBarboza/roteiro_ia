import streamlit as st
import os
import asyncio
from datetime import datetime
import google.generativeai as genai
from funcoes import conectar_firebase

genai.configure(api_key=st.secrets["GOOGLE_API_KEY"])

GEMINI_MODEL = "gemini-2.0-flash"

PROMPT_IDEALIZADOR = """
Voc√™ √© um "Curador de Destinos", um agente de viagens de elite especializado em criar roteiros aut√™nticos, inspiradores e memor√°veis. 
Seu diferencial √© ir al√©m do √≥bvio, unindo atra√ß√µes mundialmente reconhecidas a experi√™ncias culturais aut√™nticas com alta avalia√ß√£o.

Sua miss√£o √© montar um panorama estrat√©gico e inspirador sobre os tesouros de um pa√≠s para um viajante com os seguintes interesses:

- **Pa√≠s de Destino:** {pais}

Siga estritamente os seguintes passos:

1.  **Pesquisa Inicial:** Liste internamente de 8 a 10 cidades com forte apelo tur√≠stico.
2.  **An√°lise e Curadoria:** Avalie a relev√¢ncia das atra√ß√µes de cada cidade e selecione as **TOP 5 cidades**. 
A combina√ß√£o final deve ser um equil√≠brio perfeito entre ‚Äúdestaques imperd√≠veis‚Äù e ‚Äújoias culturais‚Äù que ressoem com os interesses fornecidos.
3.  **Justificativa Estrat√©gica:** Antes de listar as cidades, escreva um par√°grafo conciso explicando por que essa combina√ß√£o espec√≠fica de 5 cidades.
4.  **Montagem do Panorama:** Apresente cada cidade selecionada de forma padronizada.

Apresente o resultado **sem t√≠tulo geral** e no seguinte formato em Markdown:

**Justificativa do Roteiro:** [Par√°grafo explicando a l√≥gica da sele√ß√£o das 5 cidades com base nos interesses]

---

## **[Nome da Cidade 1]**
**Por que visitar:** Famosa por [caracter√≠stica principal], esta cidade √© um prato cheio para quem busca [interesse espec√≠fico do viajante], oferecendo experi√™ncias como [exemplos concretos].
* **[Ponto Tur√≠stico 1]:** Imperd√≠vel para vivenciar [experi√™ncia chave]. **Dica de ouro:** [uma dica pr√°tica, como melhor hor√°rio ou um detalhe a n√£o perder].
* **[Ponto Tur√≠stico 2]:** Oferece uma imers√£o aut√™ntica em [aspecto cultural/hist√≥rico], perfeito para [interesse espec√≠fico do viajante].
* **[Ponto Tur√≠stico 3]:** Essencial pela sua relev√¢ncia em [tema], proporcionando uma oportunidade √∫nica para [a√ß√£o/sentimento a ser despertado].

## **[Nome da Cidade 2]**
... e assim sucessivamente para as 5 cidades.
"""

PROMPT_PLANEJADOR = """
Voc√™ √© um "Arquiteto de Viagens", especialista em projetar experi√™ncias completas e imersivas, unindo efici√™ncia log√≠stica, 
curadoria cultural e dicas pr√°ticas que transformam uma viagem comum em inesquec√≠vel.

Sua tarefa √© criar um roteiro totalmente personalizado e otimizado, com base nas especifica√ß√µes abaixo:

- **Destino:** {pais}
- **Dura√ß√£o Total:** {dias}
- **Locais/Experi√™ncias Obrigat√≥rias:** {ideias_buscadas}

Siga rigorosamente este processo:

1.  **Mapeamento Log√≠stico Otimizado:** Defina a ordem das cidades e transportes.
2.  **Roteiro Di√°rio Imersivo:** Para cada dia, agrupe atividades por bairro. 
    - **# IMPORTANTE: Considere o Dia 1 como o dia da chegada, planejando atividades mais leves e flex√≠veis para permitir check-in e descanso.**
    - Crie uma lista com uma sequ√™ncia l√≥gica de atividades, cujo n√∫mero pode variar.
    - **# Para a gastronomia, sugira apenas pratos t√≠picos e n√£o restaurantes espec√≠ficos.**
    - Tente sempre usar emojis relevantes (ex: üèõÔ∏è para museus, üç≤ para comida, ‚úàÔ∏è para voos) para deixar o roteiro mais visual e amig√°vel.
    - Evite divis√µes de hor√°rio, a menos que seja crucial.

Apresente o resultado **sem t√≠tulo geral** e no seguinte formato em Markdown:

### **‚úàÔ∏è Vis√£o Geral e Log√≠stica Otimizada**
- **Ordem Sugerida:** [Cidade A] -> [Cidade B] -> [Cidade C]
- **Transporte Entre Cidades:**
    - **De [Cidade A] para [Cidade B]:** [Op√ß√£o recomendada].
    - **De [Cidade B] para [Cidade C]:** [Op√ß√£o recomendada].

---

## **üó∫Ô∏è Roteiro {pais}**

### **Dia 1: Chegada em [Cidade] e Aclimata√ß√£o**
- **Foco:** Explora√ß√£o leve e primeira imers√£o na cultura local.
- **[Atividade 1, ex: Caminhada pela pra√ßa central]** ‚Äî [Breve descri√ß√£o e dica, ex: "Ideal para sentir o ritmo da cidade sem pressa."].
- **... (adicione no m√°ximo mais uma atividade leve, se aplic√°vel)**
- **Experi√™ncia Gastron√¥mica:** Prove o [nome do prato t√≠pico], conhecido por [breve descri√ß√£o].
- **Sugest√£o Noturna:** [Atividade de lazer leve, ex: "Tomar um caf√© local observando o movimento."].

*(Repita a estrutura para os outros dias, com ritmo normal)*

---

### **üí° Dicas Essenciais para {pais}**
- **Transporte Local:** [Dicas sobre como usar o transporte p√∫blico].
- **Dinheiro e Pagamentos:** [Informa√ß√µes sobre aceita√ß√£o de cart√µes].
- **Etiqueta Cultural:** [Uma dica importante sobre costumes locais].
- **Seguran√ßa:** [Conselho pr√°tico de seguran√ßa].
"""

PROMPT_REVISOR = """
Voc√™ √© um "Auditor de Experi√™ncias de Viagem", um especialista em analisar roteiros para maximizar qualidade, viabilidade e ritmo. 
Seu objetivo √© eliminar estresse, otimizar a log√≠stica com base em dados reais e garantir que a viagem seja perfeitamente alinhada ao perfil do viajante.

Sua tarefa √© auditar e reconstruir o roteiro abaixo, gerando uma vers√£o final validada e otimizada.

- **Roteiro para Auditoria:** {plano_de_roteiro}

Siga este processo de auditoria:

1.  **Diagn√≥stico Inicial:** Analise o roteiro original, **verificando se o ritmo do Dia 1 √© leve e adequado para a chegada do viajante.**
2.  **Valida√ß√£o de Dados:** Pesquise tempos reais de deslocamento e visita.
3.  **Reconstru√ß√£o Otimizada:** Reorganize o roteiro de forma l√≥gica, agrupando atividades por regi√£o.
4.  **Enriquecimento:** Adicione dicas pr√°ticas e use emojis relevantes. **Para a gastronomia, foque em sugerir pratos t√≠picos, n√£o restaurantes.**

**IMPORTANTE: Sua resposta deve come√ßar DIRETAMENTE com a se√ß√£o de Vis√£o Geral. N√£o inclua nenhuma frase introdut√≥ria, sauda√ß√£o ou par√°grafos explicativos antes do roteiro formatado.**


Apresente o resultado no seguinte formato **(incluindo a vis√£o geral da log√≠stica, o roteiro otimizado e as dicas)**:

---

### **‚úàÔ∏è Vis√£o Geral e Log√≠stica Otimizada**
- **Ordem Sugerida:** [Cidade A] -> [Cidade B] -> [Cidade C]
- **Transporte Entre Cidades:**
    - **De [Cidade A] para [Cidade B]:** [Op√ß√£o recomendada e revisada].
    - **De [Cidade B] para [Cidade C]:** [Op√ß√£o recomendada e revisada].

---

## **üó∫Ô∏è Roteiro {pais}**

### **(emoji)Dia 1: Chegada em [Cidade]**
- **(emoji)Foco:** [Objetivo do dia, ex: "Recep√ß√£o e explora√ß√£o inicial do bairro."].
- **(emoji)[Atividade 1]**: [Breve descri√ß√£o e dica pr√°tica].
- **... (adicione mais atividades conforme o ritmo e a log√≠stica permitirem)**
- **(emoji)Experi√™ncia Gastron√¥mica:** Prove o [nome do prato t√≠pico].
- **(emoji)Sugest√£o Noturna:** [Atividade de lazer leve].

*(Repita a estrutura para todos os dias)*

---

### **üí° Dicas Essenciais Atualizadas**
- [Dicas relevantes e revisadas].
"""

PROMPT_EMOJIS = """
Voc√™ √© um especialista em sem√¢ntica visual e cultura global.
Sua miss√£o √© selecionar de 2 a 3 emojis que representem de forma clara e culturalmente relevante o pa√≠s: {pais}.
A escolha deve considerar:
- S√≠mbolos nacionais, fauna, flora ou elementos culturais marcantes.
- Emojis amplamente reconhec√≠veis e que fa√ßam sentido para um p√∫blico internacional.
- Evitar combina√ß√µes amb√≠guas ou que possam gerar interpreta√ß√µes erradas.
- Proibido use bandeiras

Retorne apenas os emojis, separados por espa√ßo, sem explica√ß√µes adicionais.
"""

PROMPT_HTML = """
Voc√™ √© um "Designer de Roteiros Digitais", um especialista em converter textos de viagem em formato Markdown para p√°ginas HTML limpas, bem estruturadas e com um design visual profissional e lindo.

Sua √∫nica tarefa √© pegar o roteiro em Markdown fornecido e convert√™-lo integralmente para um c√≥digo HTML5.

**Roteiro em Markdown para Converter:**
{roteiro_revisado}

Siga estas diretrizes estritamente:

1.  **Estrutura do Head:** No `<head>` do HTML, inclua `<meta charset="UTF-8">` e o t√≠tulo da p√°gina no formato `<title>Roteiro para {pais}</title>`.

2.  **Estrutura Sem√¢ntica:** Use tags HTML5 apropriadas (`<h2>`, `<h3>`, `<h4>`, `p`, `ul`, `li`, `strong`).

3.  **Estilo Profissional (CSS):** Inclua a tag `<style>` dentro do `<head>`. Use EXATAMENTE o estilo abaixo:

    ```css
    @import url('[https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap](https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap)');

    body {
        font-family: 'Roboto', Arial, sans-serif;
        background-color: #0E1117; /* Cor de fundo do tema escuro do Streamlit */
        color: #FAFAFA; /* Cor do texto principal */
        line-height: 1.7;
        margin: 0;
        padding: 40px;
    }
    h2, h3, h4 {
        color: #FFFFFF;
        font-weight: 700;
        border-bottom: 1px solid #4A4A4A;
        padding-bottom: 10px;
        margin-top: 40px;
        margin-bottom: 20px;
    }
    h2 {
        font-size: 28px;
    }
    h3 {
        font-size: 22px;
        border-bottom: none;
    }
    ul {
        list-style: none;
        padding-left: 5px;
    }
    li {
        padding-left: 10px;
        margin-bottom: 15px;
    }
    strong, b {
        color: #FFFFFF;
        font-weight: 700;
    }
    /* Otimiza√ß√£o para impress√£o em PDF */
    @media print {
        body {
            background-color: #FFFFFF !important;
            color: #000000 !important;
            padding: 20px;
        }
        h2, h3, h4 {
            color: #000000 !important;
            border-bottom-color: #CCCCCC !important;
        }
        strong, b {
            color: #000000 !important;
        }
    }
    ```

4.  **Sa√≠da Final:** Apresente apenas o c√≥digo HTML completo, come√ßando com `<!DOCTYPE html>`, dentro de um √∫nico bloco de c√≥digo.
"""

async def gerar_roteiro_completo(pais, dias):
    model = genai.GenerativeModel(GEMINI_MODEL)

    with st.status("Fase 1: Gerando ideias de destinos...", expanded=True) as status:
        prompt = PROMPT_IDEALIZADOR.format(pais=pais)
        response_idealizador = await model.generate_content_async(prompt)
        ideias_buscadas = response_idealizador.text
        status.update(label="Fase 1: Conclu√≠da!", state="complete")

    with st.status("Fase 2: Planejando o rascunho do roteiro...", expanded=True) as status:
        prompt = PROMPT_PLANEJADOR.format(pais=pais, dias=dias, ideias_buscadas=ideias_buscadas)
        response_planejador = await model.generate_content_async(prompt)
        plano_de_roteiro = response_planejador.text
        status.update(label="Fase 2: Conclu√≠da!", state="complete")

    with st.status("Fase 3: Refinando e finalizando a experi√™ncia...", expanded=True) as status:
        prompt = PROMPT_REVISOR.format(plano_de_roteiro=plano_de_roteiro, pais=pais)
        response_revisor = await model.generate_content_async(prompt)
        roteiro_revisado = response_revisor.text
        
        prompt_emojis = PROMPT_EMOJIS.format(pais=pais)
        emojis_pesquisa = await model.generate_content_async(prompt_emojis)
        emojis_gerados = emojis_pesquisa.text.strip()

        prompt = PROMPT_HTML.format(roteiro_revisado=roteiro_revisado, pais=pais)
        response_html = await model.generate_content_async(prompt)
        roteiro_html = response_html.text.strip()
        if "```html" in roteiro_html:
            roteiro_html = roteiro_html.split("```html")[1].split("```")[0]
        status.update(label="Fase 3: Conclu√≠da!", state="complete")

    return roteiro_revisado, emojis_gerados, roteiro_html

###################

db = conectar_firebase()
colecao = 'usuarios2'
##############

st.title("üìù Crie Seus Roteiros")
st.header("Preencha os campos abaixo para que nossa IA monte a viagem dos seus sonhos.")

with st.form("form_roteiro"):
    pais = st.text_input("Qual o pa√≠s que voc√™ quer visitar?")
    data_inicio_str = st.date_input("Data de in√≠cio da viagem", format="DD/MM/YYYY")
    data_fim_str = st.date_input("Data de fim da viagem", format="DD/MM/YYYY")
    submitted = st.form_submit_button("Gerar Roteiro ‚ú®")
    if submitted:
        if not pais or not data_inicio_str or not data_fim_str:
            st.error("Por favor, preencha todos os campos.")
        elif data_inicio_str >= data_fim_str:
            st.error("A data de fim deve ser posterior √† data de in√≠cio.")
        else:
            dias = (data_fim_str - data_inicio_str).days
            st.info(f"Preparando um roteiro de {dias} dias para {pais}. Isso pode levar um momento...")
            roteiro_final, emojis_gerados = asyncio.run(gerar_roteiro_completo(pais, dias))
            st.balloons()
            st.divider()
            st.header("üéâ Seu Roteiro Personalizado est√° Pronto!")
            st.markdown(roteiro_final)

            novo_roteiro = roteiro_final
            novo_html = roteiro_final_html
            user_ref = db.collection(colecao).document(st.user.email)
            doc = user_ref.get()
            dados = doc.to_dict() if doc.exists else {}
    
            if 'roteiros' not in dados:
                dados['roteiros'] = []
    
            dados['roteiros'].append({
            'texto': novo_roteiro,
            'pais': pais,
            'emojis': emojis_gerados,
            'html': novo_html
            })
            user_ref.set(dados)
            st.success("Roteiro salvo!")